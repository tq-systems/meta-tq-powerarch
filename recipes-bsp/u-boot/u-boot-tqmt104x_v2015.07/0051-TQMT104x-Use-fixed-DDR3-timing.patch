From 15c37cd25407e76a8271322f335ae33520dc5609 Mon Sep 17 00:00:00 2001
From: Stefan Lange <s.lange@gateware.de>
Date: Mon, 10 Jul 2017 11:40:59 +0200
Subject: [PATCH] TQMT104x: Use fixed DDR3 timing

Change TQMT104x DDR3 configuration to fixed timing values.
Raw timing values option is preserved and can be activated in board
header file.

Signed-off-by: Radek Raichel <raichelr@tqs.de>
Reviewed-by: Stefan Lange <s.lange@gateware.de>
---
 board/tqc/tqmt104x/ddr.c   | 111 +++++++++++++++++++++++++++++++++++++++++++--
 board/tqc/tqmt104x/ddr.h   |  37 +++++++++++++++
 include/configs/TQMT104x.h |  14 +++++-
 3 files changed, 155 insertions(+), 7 deletions(-)

diff --git a/board/tqc/tqmt104x/ddr.c b/board/tqc/tqmt104x/ddr.c
index 869a90d..5e9a320 100644
--- a/board/tqc/tqmt104x/ddr.c
+++ b/board/tqc/tqmt104x/ddr.c
@@ -9,7 +9,9 @@
 #include <hwconfig.h>
 #include <asm/mmu.h>
 #include <fsl_ddr_sdram.h>
+#ifdef CONFIG_SYS_DDR_RAW_TIMING
 #include <fsl_ddr_dimm_params.h>
+#endif
 #include <asm/fsl_law.h>
 #include <asm/mpc85xx_gpio.h>
 #include "ddr.h"
@@ -74,7 +76,6 @@ int fsl_ddr_get_dimm_params(dimm_params_t *pdimm,
 
         return 0;
 }
-#endif /* CONFIG_SYS_DDR_RAW_TIMING */
 
 void fsl_ddr_board_options(memctl_options_t *popts,
 				dimm_params_t *pdimm,
@@ -154,6 +155,102 @@ found:
 	popts->ddr_cdr2 = DDR_CDR2_ODT(DDR_CDR_ODT_75ohm);
 }
 
+/* use fixed timing if CONFIG_SYS_DDR_RAW_TIMING is not defined */
+#else /* CONFIG_SYS_DDR_RAW_TIMING */
+/*
+ * Fixed sdram init -- doesn't use serial presence detect.
+ */
+phys_size_t fixed_sdram(void)
+{
+        struct ccsr_ddr *ddr = (struct ccsr_ddr *)CONFIG_SYS_FSL_DDR_ADDR;
+        u32 temp_sdram_cfg;
+        u32 total_gb_size_per_controller;
+        unsigned int bus_width;
+        int timeout;
+        size_t ddr_size;
+
+        out_be32(&ddr->sdram_cfg, DDR_SDRAM_CFG);
+
+        out_be32(&ddr->cs0_bnds, DDR_CS0_BNDS);
+        out_be32(&ddr->cs0_config, DDR_CS0_CONFIG);
+        out_be32(&ddr->cs0_config_2, DDR_CS0_CONFIG2);
+
+        out_be32(&ddr->timing_cfg_3, DDR_TIMING_CFG_3);
+        out_be32(&ddr->timing_cfg_0, DDR_TIMING_CFG_0);
+        out_be32(&ddr->timing_cfg_1, DDR_TIMING_CFG_1);
+        out_be32(&ddr->timing_cfg_2, DDR_TIMING_CFG_2);
+
+        out_be32(&ddr->sdram_mode, DDR_SDRAM_MODE);
+        out_be32(&ddr->sdram_mode_2, DDR_SDRAM_MODE_2);
+
+        out_be32(&ddr->sdram_md_cntl, DDR_SDRAM_MD_CNTL);
+        out_be32(&ddr->sdram_interval, DDR_SDRAM_INTERVAL);
+        out_be32(&ddr->sdram_data_init, DDR_DATA_INIT);
+        out_be32(&ddr->sdram_clk_cntl, DDR_SDRAM_CLK_CNTL);
+
+        out_be32(&ddr->timing_cfg_4, DDR_TIMING_CFG_4);
+        out_be32(&ddr->timing_cfg_5, DDR_TIMING_CFG_5);
+
+        out_be32(&ddr->ddr_zq_cntl, DDR_DDR_ZQ_CNTL);
+
+        out_be32(&ddr->ddr_wrlvl_cntl, DDR_DDR_WRLVL_CNTL);
+
+        out_be32(&ddr->ddr_wrlvl_cntl_2, DDR_DDR_WRLVL_CNTL_2);
+        out_be32(&ddr->ddr_wrlvl_cntl_3, DDR_DDR_WRLVL_CNTL_3);
+
+        out_be32(&ddr->ddr_sr_cntr, DDR_SR_CNTR);
+        out_be32(&ddr->ddr_sdram_rcw_1, DDR_SDRAM_RCW_1);
+        out_be32(&ddr->ddr_sdram_rcw_2,DDR_SDRAM_RCW_2);
+        out_be32(&ddr->ddr_cdr1, DDR_DDR_CDR1);
+        out_be32(&ddr->sdram_cfg_2,  DDR_SDRAM_CFG_2);
+        out_be32(&ddr->ddr_cdr2, DDR_DDR_CDR2);
+
+        udelay(500);
+        asm volatile("sync;isync");
+
+        temp_sdram_cfg = (in_be32(&ddr->sdram_cfg) & ~SDRAM_CFG_BI);
+        out_be32(&ddr->sdram_cfg, temp_sdram_cfg | DDR_SDRAM_CFG_MEM_EN);
+        asm volatile("sync;isync");
+
+        /* Size; no Interleaving! */
+        total_gb_size_per_controller = 1 << (
+                ((DDR_CS0_CONFIG >> 14) & 0x3) + 2 +    /* BA_BITS_CSn  */
+                ((DDR_CS0_CONFIG >> 8) & 0x7) + 12 +    /* ROW_BITS_CSn */
+                ((DDR_CS0_CONFIG >> 0) & 0x7) + 8 +     /* COL_BITS_CSn */
+                3 - ((DDR_SDRAM_CFG >> 19) & 0x3) -     /* 0 = 64bit, 1 = 32bit bus */
+                26);                    /* minus 26 (count of 64M) */
+
+        /*
+         * total memory / bus width = transactions needed
+         * transactions needed / data rate = seconds
+         * to add plenty of buffer, double the time
+         * For example, 2GB on 666MT/s 64-bit bus takes about 402ms
+         * Let's wait for 800ms
+         */
+        bus_width = 3 - ((ddr->sdram_cfg & SDRAM_CFG_DBW_MASK) >> SDRAM_CFG_DBW_SHIFT);
+        timeout = ((total_gb_size_per_controller << (6 - bus_width)) * 100 / (get_ddr_freq(0) >> 20)) << 1;
+
+        /* Poll DDR_SDRAM_CFG_2[D_INIT] bit until auto-data init is done.  */
+        while ((in_be32(&ddr->sdram_cfg_2) & SDRAM_CFG2_D_INIT) &&
+                (timeout >= 0)) {
+                udelay(10000);          /* throttle polling rate */
+                timeout--;
+        }
+
+        if (timeout <= 0)
+                printf("Waiting for D_INIT timeout. Memory may not work.\n");
+
+	ddr_size = (phys_size_t) CONFIG_SYS_SDRAM_SIZE * 1024 * 1024;
+
+        if (set_ddr_laws(CONFIG_SYS_DDR_SDRAM_BASE, ddr_size, LAW_TRGT_IF_DDR_1) < 0) {
+                printf("ERROR setting Local Access Windows for DDR\n");
+                return 0;
+        }
+
+        return ddr_size;
+}
+#endif /* CONFIG_SYS_DDR_RAW_TIMING */
+
 #if defined(CONFIG_DEEP_SLEEP)
 void board_mem_sleep_setup(void)
 {
@@ -168,16 +265,20 @@ phys_size_t initdram(int board_type)
 	phys_size_t dram_size;
 
 #if defined(CONFIG_SPL_BUILD) || !defined(CONFIG_RAMBOOT_PBL)
-	puts("Initializing....using SPD\n");
-
+#ifdef CONFIG_SYS_DDR_RAW_TIMING
+	puts("Initializing....using raw ddr timings\n");
 	dram_size = fsl_ddr_sdram();
+#else
+        puts("Initializing....using fixed ddr timings\n");
+        dram_size = fixed_sdram();
+#endif /* CONFIG_SYS_DDR_RAW_TIMING */
 
 	dram_size = setup_ddr_tlbs(dram_size / 0x100000);
 	dram_size *= 0x100000;
 
 #else
-	dram_size =  fsl_ddr_sdram_size();
-#endif
+	dram_size =  (phys_size_t) CONFIG_SYS_SDRAM_SIZE * 1024 * 1024;
+#endif /* CONFIG_SPL_BUILD || !CONFIG_RAMBOOT_PBL */
 
 #if defined(CONFIG_DEEP_SLEEP) && !defined(CONFIG_SPL_BUILD)
 	fsl_dp_resume();
diff --git a/board/tqc/tqmt104x/ddr.h b/board/tqc/tqmt104x/ddr.h
index 546e3ce..8a875f4 100644
--- a/board/tqc/tqmt104x/ddr.h
+++ b/board/tqc/tqmt104x/ddr.h
@@ -6,6 +6,8 @@
 
 #ifndef __DDR_H__
 #define __DDR_H__
+
+#ifdef CONFIG_SYS_DDR_RAW_TIMING
 struct board_specific_parameters {
 	u32 n_ranks;
 	u32 datarate_mhz_high;
@@ -35,4 +37,39 @@ static const struct board_specific_parameters udimm0[] = {
 static const struct board_specific_parameters *udimms[] = {
 	udimm0,
 };
+
+#else /* CONFIG_SYS_DDR_RAW_TIMING */
+
+#define DDR_SDRAM_CFG                   0x67040008
+#define DDR_CS0_BNDS                    0x0000007F
+#define DDR_CS0_CONFIG                  0x80044302
+#define DDR_CS0_CONFIG2                 0x00000000
+#define DDR_TIMING_CFG_0                0x0064400C
+#define DDR_TIMING_CFG_1                0xBCB48C56
+#define DDR_TIMING_CFG_2                0x0040C160
+#define DDR_TIMING_CFG_3                0x010C1000
+#define DDR_TIMING_CFG_4                0x00000001
+#define DDR_TIMING_CFG_5                0x04401400
+#define DDR_SDRAM_CFG_2                 0x00401110
+#define DDR_SDRAM_MODE                  0x00441C70
+#define DDR_SDRAM_MODE_2                0x00180000
+#define DDR_SDRAM_INTERVAL              0x0C300100
+#define DDR_DDR_WRLVL_CNTL              0x8675c607
+#define DDR_DDR_WRLVL_CNTL_2            0x09050600
+#define DDR_DDR_WRLVL_CNTL_3            0x06050600
+#define DDR_DDR_CDR1                    0x80040000
+#define DDR_DDR_CDR2                    0x00000001
+#define DDR_SDRAM_CLK_CNTL              0x02000000
+#define DDR_DDR_ZQ_CNTL                 0x89080600
+#define DDR_DATA_INIT                   0xDEADBEEF
+#define DDR_SDRAM_MD_CNTL               0x00000000
+#define DDR_SR_CNTR                     0x00000000
+#define DDR_SDRAM_RCW_1                 0x00000000
+#define DDR_SDRAM_RCW_2                 0x00000000
+#define DDR_INIT_ADDR                   0x00000000
+#define DDR_INIT_EXT_ADDR               0x00000000
+#define DDR_SDRAM_CFG_MEM_EN            0x80000000
+
+#endif /* CONFIG_SYS_DDR_RAW_TIMING */
+
 #endif
diff --git a/include/configs/TQMT104x.h b/include/configs/TQMT104x.h
index d308116..4c8c114 100644
--- a/include/configs/TQMT104x.h
+++ b/include/configs/TQMT104x.h
@@ -188,10 +188,20 @@
 #define CONFIG_DIMM_SLOTS_PER_CTLR	1
 #define CONFIG_CHIP_SELECTS_PER_CTRL	1
 
-#define CONFIG_SYS_DDR_RAW_TIMING
+/*
+ * Use fixed DDR timing
+ *
+ * DDR_RAW_TIMING was only used for bringup/debugging.
+ * If DDR_RAW_TIMING shall be used for testing purposes, define
+ * CONFIG_SYS_DDR_RAW_TIMING here.
+ */
+/*#define CONFIG_SYS_DDR_RAW_TIMING*/
+#ifdef CONFIG_SYS_DDR_RAW_TIMING
+#define CONFIG_FSL_DDR_INTERACTIVE
 #define CONFIG_SYS_FSL_DDR3
+#endif
 
-#define CONFIG_SYS_SDRAM_SIZE	2048	/* for fixed parameter use */
+#define CONFIG_SYS_SDRAM_SIZE  2048    /* for fixed parameter use */
 
 /*
  * IFC Definitions
-- 
1.9.1

